# GPU Hot - Hub + Local Agent
# For monitor machine (workstation/server) that monitors itself + remote_machines
# Runs 2 containers: local agent (your GPU) + hub (dashboard)

services:
  # Local agent - exposes your local GPU(s)
  local-agent:
    build: .
    ports:
      - "5313:1312"  # Agent on different port to avoid conflict
    environment:
      - GPU_HOT_MODE=agent
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1312/api/agent/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  
  # Hub - monitors local-agent + remote_machines
  hub:
    build: .
    ports:
      - "1312:1312"
    volumes:
      # Optional: mount nodes.yaml for file-based configuration
      - ./nodes.yaml:/app/nodes.yaml:ro
    environment:
      - GPU_HOT_MODE=hub
      # Option 1: Add remote_machines via environment variable
      - GPU_HOT_NODES=http://local-agent:1312,${REMOTE_NODES:-}
      # Option 2: Or use nodes.yaml file (mounted above)
      - AGENT_POLL_INTERVAL=1.0
    depends_on:
      - local-agent
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1312/api/hub/summary"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

# Usage:
#
# Option 1: Environment variable (quick setup)
#   # Monitor your monitor machine only:
#   docker-compose -f docker-compose.hub.yml up -d
#
#   # Monitor your monitor machine + remote_machines:
#   REMOTE_NODES=http://192.168.0.212:1312 docker-compose -f docker-compose.hub.yml up -d
#   REMOTE_NODES=http://192.168.0.212:1312,http://node2:1312 docker-compose -f docker-compose.hub.yml up -d
#
# Option 2: Config file (for many nodes)
#   # Create nodes.yaml with your remote_machines (see nodes.yaml.example)
#   # Then run:
#   docker-compose -f docker-compose.hub.yml up -d
#
# Option 3: Both (env var takes precedence)
#   # Use nodes.yaml as base + add extra nodes via env var:
#   REMOTE_NODES=http://extra-node:1312 docker-compose -f docker-compose.hub.yml up -d
#
# Open: http://localhost:1312
# Stop: docker-compose -f docker-compose.hub.yml down

